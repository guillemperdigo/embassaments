# -*- coding: utf-8 -*-
"""embassaments-whatsapp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18eJtp4_DDLwB1m8o_vOQB3nG-joaEtSc
"""

import requests
import pandas as pd
from tqdm import tqdm
from dotenv import load_dotenv
import smtplib
import ssl
import os

load_dotenv()  # carrega variables des de .env



# --- 1. Obtenir el catÃ leg de sensors ---
catalog_url = "http://aca-web.gencat.cat/sdim2/apirest/catalog?componentType=embassament"
response = requests.get(catalog_url)
catalog = response.json()

# --- 2. Extreure sensors de volum i percentatge ---
sensors = []
for provider in catalog.get("providers", []):
    sensors.extend(provider.get("sensors", []))

sensors_data = []
for sensor in sensors:
    desc = sensor.get("description", "").lower()
    if "volum embassat" in desc:
        capacitat_raw = sensor.get("componentAdditionalInfo", {}).get("Capacitat mÃ xima embassament", "0")
        capacitat_maxima = float(capacitat_raw.replace(",", ".").replace(" hmÂ³", ""))

        sensors_data.append({
            "embassament": sensor.get("componentDesc"),
            "sensor": sensor.get("sensor"),
            "provider": provider.get("provider"),
            "unit": sensor.get("unit"),
            "tipus": desc,
            "capacitat_maxima": capacitat_maxima
        })

# --- 3. Obtenir valors actuals de cada sensor ---
records = []
for s in tqdm(sensors_data):
    url = f"http://aca-web.gencat.cat/sdim2/apirest/data/{s['provider']}/{s['sensor']}"
    r = requests.get(url)
    if r.status_code == 200:
        obs = r.json().get("observations", [])
        if obs:
            records.append({
                "Embassament": s["embassament"],
                "Unitat": s["unit"],
                "Tipus": s["tipus"],
                "Valor": float(obs[0]["value"].strip()),
                "Timestamp": obs[0]["timestamp"]
            })

# --- 4. Crear DataFrame i separar volum i % ---
df = pd.DataFrame(records)
exclosos = ['GaiÃ  (el Catllar)', 'Pasteral (la Cellera de Ter)']
df = df[~df['Embassament'].isin(exclosos)]
df_vol = df[df['Unitat'] == 'hmÂ³']
df_pct = df[df['Unitat'] == '%']

# --- 5. Afegir capacitat mÃ xima al df_vol ---
capacitats = {
    s["embassament"]: s["capacitat_maxima"]
    for s in sensors_data if s["unit"] == "hmÂ³"
}

df_vol = df_vol.copy()
df_vol["Capacitat mÃ xima (hmÂ³)"] = df_vol["Embassament"].map(capacitats)

# --- 6. CÃ lcul totals ---
volum_total = df_vol["Valor"].sum()
capacitat_total = df_vol["Capacitat mÃ xima (hmÂ³)"].sum()
percentatge_total = (volum_total / capacitat_total) * 100

# --- 7. Merge volum + % ---
df_final = pd.merge(
    df_vol[['Embassament', 'Valor']],
    df_pct[['Embassament', 'Valor']],
    on='Embassament',
    suffixes=(' (hmÂ³)', ' (%)')
)

df_final = df_final.sort_values('Valor (%)')
print(df_final.to_string(index=False))

# --- 8. Resultat final ---
print(f"\nðŸ’§ Volum total embassat: {volum_total:.2f} hmÂ³")
print(f"ðŸ“¦ Capacitat total combinada: {capacitat_total:.2f} hmÂ³")
print(f"ðŸ“Š % total embassat: {percentatge_total:.1f}%")

# --- 9. Enviar per correu electrÃ²nic ---

# Credencials i configuraciÃ³ del correu electrÃ²nic
sender_email = os.getenv("SENDER_EMAIL")  # Utilitza una variable d'entorn per l'email del remitent
sender_password = os.getenv("SENDER_PASSWORD")  # Utilitza una variable d'entorn per la contrasenya
receiver_email = os.getenv("RECIPIENT_EMAIL")  # Utilitza una variable d'entorn per l'email del destinatari

if not all([sender_email, sender_password, receiver_email]):
    raise ValueError("Falten variables d'entorn per a l'enviament de correu electrÃ²nic al fitxer .env")

# Crea el missatge
subject = "InformaciÃ³ Embassaments"
body = f"""
ðŸ’§ Volum total embassat: {volum_total:.2f} hmÂ³
ðŸ“¦ Capacitat total: {capacitat_total:.2f} hmÂ³
ðŸ“Š Percentatge total embassat: {percentatge_total:.1f}%
"""
message = f"Subject: {subject}\n\n{body}"

# Crea un context SSL segur
context = ssl.create_default_context()

# Intenta enviar el correu electrÃ²nic
try:
    with smtplib.SMTP_SSL("smtp.gmail.com", 465, context=context) as server:
        server.login(sender_email, sender_password)
        server.sendmail(sender_email, receiver_email, message)
    print("Correu electrÃ²nic enviat correctament!")
except Exception as e:
    print(f"Error en enviar el correu electrÃ²nic: {e}")
